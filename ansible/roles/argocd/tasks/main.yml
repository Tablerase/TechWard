---
# ArgoCD: https://github.com/argoproj/argo-cd
- name: Ensure that ArgoCD namespace exists
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ argocd_namespace }}"
    state: present
  tags:
    - argocd
    - namespace

- name: Install ArgoCD
  kubernetes.core.k8s:
    src: https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
    state: present
    namespace: "{{ argocd_namespace }}"
  register: argocd_install
  until: argocd_install is succeeded
  retries: 5
  delay: 10
  tags:
    - argocd

- name: Wait for Argo CD server deployment to be ready
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    namespace: argocd
    name: argocd-server
  register: argocd_server
  until: argocd_server.resources[0].status.readyReplicas | default(0) > 0
  retries: 20
  delay: 15

# TLS with Ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#traefik-v30

- name: Setup Ingress for ArgoCD
  kubernetes.core.k8s:
    src: "files/argocd-ingress.yml"
    state: present
  register: argocd_ingress
  tags:
    - argocd
    - ingress

# Apply changes to argocd-server deployment to pick up new ConfigMap
- name: Restart argocd-server deployment
  kubernetes.core.k8s:
    state: present
    namespace: argocd
    kind: Deployment
    name: argocd-server
    merge_type: strategic-merge
    definition:
      spec:
        template:
          metadata:
            annotations:
              kubectl.kubernetes.io/restartedAt: "{{ lookup('pipe','date +%s') }}"
  when: argocd_ingress is changed
  tags:
    - argocd
    - ingress

- name: Get initial admin password for ArgoCD
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    namespace: argocd
    name: argocd-initial-admin-secret
  register: argocd_admin_secret
  changed_when: false
  tags:
    - argocd
    - admin

# TODO: Change initial admin password after first login - credentials handle by ansible vault or similar
# TODO: Remove debug of initial password in production environments
- name: Show initial admin password for ArgoCD
  ansible.builtin.debug:
    msg: "ArgoCD initial admin password: {{ argocd_admin_secret.resources[0].data.password | b64decode }}"
  when: argocd_admin_secret.resources | length > 0
  tags:
    - argocd
    - admin

# ArgoCD CLI installation
# Doc: https://argo-cd.readthedocs.io/en/stable/cli_installation/

- name: Fetch stable ArgoCD VERSION file
  ansible.builtin.uri:
    url: https://raw.githubusercontent.com/argoproj/argo-cd/stable/VERSION
    return_content: true
  register: argocd_version_file
  failed_when: false
  changed_when: false
  tags:
    - argocd
    - cli

- name: Set argo cli version from VERSION file when available
  ansible.builtin.set_fact:
    argocd_cli_version_tag: "v{{ argocd_version_file.content | trim }}"
  when: argocd_version_file.status | default(0) == 200 and (argocd_version_file.content | length) > 0
  tags:
    - argocd
    - cli

- name: Fallback - retrieve latest ArgoCD release via GitHub API
  ansible.builtin.uri:
    url: https://api.github.com/repos/argoproj/argo-cd/releases/latest
    return_content: true
  register: argocd_release
  when: argocd_cli_version_tag is not defined
  changed_when: false
  tags:
    - argocd
    - cli

- name: Set argo cli version from GitHub API fallback
  ansible.builtin.set_fact:
    argocd_cli_version_tag: "{{ argocd_release.json.tag_name }}"
  when: argocd_cli_version_tag is not defined
  tags:
    - argocd
    - cli

- name: Download ArgoCD CLI binary
  ansible.builtin.get_url:
    url: "https://github.com/argoproj/argo-cd/releases/download/{{ argocd_cli_version_tag }}/argocd-linux-amd64"
    dest: /usr/local/bin/argocd
    mode: "0555"
  tags:
    - argocd
    - cli

- name: Verify ArgoCD CLI installation
  ansible.builtin.command: argocd version --client
  register: argocd_cli_version
  changed_when: false
  tags:
    - argocd
    - cli

- name: Login ArgoCD CLI
  ansible.builtin.command: >
    argocd login argocd.localhost
    --username admin
    --password {{ argocd_admin_secret.resources[0].data.password | b64decode }}
    --insecure
  register: argocd_cli_login
  changed_when: "'successfully logged in' in argocd_cli_login.stdout.lower()"
  retries: 3
  delay: 10
  until: argocd_cli_login is succeeded
  tags:
    - argocd
    - cli
    - login
